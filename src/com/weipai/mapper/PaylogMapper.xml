<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weipai.mapper.PaylogMapper">
  <resultMap id="BaseResultMap" type="com.weipai.model.Paylog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="managerId" jdbcType="INTEGER" property="managerid" />
    <result column="uuid" jdbcType="INTEGER" property="uuid" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="payCount" jdbcType="INTEGER" property="paycount" />
    <result column="payTime" jdbcType="TIMESTAMP" property="paytime" />
    <result column="payType" jdbcType="INTEGER" property="paytype" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="nickName" jdbcType="VARCHAR" property="nickName" />
    <result column="gameId" jdbcType="INTEGER" property="gameId" />
  </resultMap>
  
  <resultMap id="ExtBaseResultMap" type="com.weipai.model.PaylogExt">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="managerId" jdbcType="INTEGER" property="managerid" />
    <result column="uuid" jdbcType="INTEGER" property="uuid" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="bonus" jdbcType="DOUBLE" property="bonus" />
    <result column="payCount" jdbcType="INTEGER" property="paycount" />
    <result column="payTime" jdbcType="TIMESTAMP" property="paytime" />
    <result column="payType" jdbcType="INTEGER" property="paytype" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="nickName" jdbcType="VARCHAR" property="nickName" />
    <result column="inviteCode" jdbcType="INTEGER" property="invitecode" />
    <result column="powerId" jdbcType="INTEGER" property="powerid" />
    <result column="inviteCode1" jdbcType="INTEGER" property="invitecode1" />
    <result column="powerId1" jdbcType="INTEGER" property="powerid1" />
    <result column="inviteCode2" jdbcType="INTEGER" property="invitecode2" />
    <result column="powerId2" jdbcType="INTEGER" property="powerid2" />
    <result column="inviteCode3" jdbcType="INTEGER" property="invitecode3" />
    <result column="powerId3" jdbcType="INTEGER" property="powerid3" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, managerId, uuid, money, payCount, payTime, payType, status,gameId
  </sql>
  <select id="selectByExample" parameterType="com.weipai.model.PaylogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paylog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from paylog
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByManagerId" resultMap="BaseResultMap" parameterType="Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    a.id,b.inviteCode as managerId,a.uuid,a.money,a.payCount,a.payTime,a.status
    from paylog a,manager b
    where 
    a.managerId = b.id
    <if test="managerId != null" >
    and a.managerId = #{managerId,jdbcType=INTEGER}
    </if>
    and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
    and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    and a.payType = #{payType,jdbcType=INTEGER}
    <if test="payType !=1" >
    and a.payTime &gt;(select IFNULL(MAX(payTime),from_unixtime(0)) from paylog where managerId = #{managerId,jdbcType=INTEGER} and (payType = 1 or payType = 2) and status = 1)
    </if>
    order by a.payTime DESC  limit #{startNum,jdbcType=INTEGER},#{pageNumber,jdbcType=INTEGER}
  </select>
  
  <select id="selectTixianSum" resultType="java.lang.Double" parameterType="Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select IFNULL(sum(a.money),0)
    from paylog a,manager b
    where 
    a.managerId = b.id
    <if test="managerId != null" >
    and a.managerId = #{managerId,jdbcType=INTEGER}
    </if>
    and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
    and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    and a.payType = 1 and a.status = 1
  </select>
  
  
<!--   <select id="selectByMidTime" resultMap="ExtBaseResultMap" parameterType="Map" > -->
<!-- 	select a.*,b.inviteCode,b.power_id powerId,c.nickName from paylog a,manager b,account c  where a.managerId = b.id and a.uuid = c.Uuid and a.payType = 0 and a.status != 2 -->
<!-- 	<if test="startTime != null" > -->
<!--  	and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP} -->
<!--  	</if> -->
<!--  	<if test="endTime != null" > -->
<!--     and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP} -->
<!--     </if> -->
<!--     <if test="levelStr != null" > -->
<!--     and (b.levelStr like #{levelStr,jdbcType=VARCHAR}"%" or b.id = #{managerId,jdbcType=INTEGER} ) -->
<!--     </if> -->
<!--     <if test="pid != null" > -->
<!--     and b.pid = #{pid,jdbcType=INTEGER} -->
<!--     </if> -->
<!--     <if test="gameId != null" > -->
<!--     and a.gameId = #{gameId,jdbcType=INTEGER} -->
<!--     </if> -->
<!-- 	<if test="uuid != null" > -->
<!--     and a.uuid = #{uuid,jdbcType=INTEGER} -->
<!--     </if> -->
<!--  ORDER BY payTime desc  limit #{startNum,jdbcType=INTEGER},#{pageNumber,jdbcType=INTEGER} -->
<!--   </select> -->
  
  <select id="selectByMidTime" resultMap="ExtBaseResultMap" parameterType="Map" >
  select n.*,m.money as bonus from(
	select a.*,b.inviteCode,c.nickName from paylog a,manager b,account c  where a.managerId = b.id and a.uuid = c.Uuid and a.payType = 0 and a.status != 2
	<if test="startTime != null" >
 	and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
 	</if>
 	<if test="endTime != null" >
    and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
    <if test="levelStr != null" >
    and (b.levelStr like #{levelStr,jdbcType=VARCHAR}"%" or b.id = #{managerId,jdbcType=INTEGER} )
    </if>
    <if test="pid != null" >
    and b.pid = #{pid,jdbcType=INTEGER}
    </if>
    <if test="gameId != null" >
    and a.gameId = #{gameId,jdbcType=INTEGER}
    </if>
	<if test="uuid != null" >
    and a.uuid = #{uuid,jdbcType=INTEGER}
    </if>
 ORDER BY payTime desc  limit #{startNum,jdbcType=INTEGER},#{pageNumber,jdbcType=INTEGER})
 n left join bonus m on n.id=m.paylogId and m.managerId=#{managerId,jdbcType=INTEGER}
 
  </select>
  <select id="selectByMidTimeBonus" resultType="java.lang.Double" parameterType="Map" >
  select IFNULL(sum(m.money),0) from(
	select a.*,b.inviteCode,c.nickName from paylog a,manager b,account c  where a.managerId = b.id and a.uuid = c.Uuid and a.payType = 0 and a.status != 2
	<if test="startTime != null" >
 	and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
 	</if>
 	<if test="endTime != null" >
    and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
    <if test="levelStr != null" >
    and (b.levelStr like #{levelStr,jdbcType=VARCHAR}"%" or b.id = #{managerId,jdbcType=INTEGER} )
    </if>
    <if test="pid != null" >
    and b.pid = #{pid,jdbcType=INTEGER}
    </if>
    <if test="gameId != null" >
    and a.gameId = #{gameId,jdbcType=INTEGER}
    </if>
	<if test="uuid != null" >
    and a.uuid = #{uuid,jdbcType=INTEGER}
    </if>
 ORDER BY payTime desc  limit #{startNum,jdbcType=INTEGER},#{pageNumber,jdbcType=INTEGER})
 n left join bonus m on n.id=m.paylogId and m.managerId=#{managerId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByMidTimeCount" resultType="java.lang.Integer"  parameterType="Map" >
    select count(a.id) from paylog a,manager b where a.managerId = b.id and a.payType = 0 
	<if test="startTime != null" >
	 and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endTime != null" >
    and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
	<if test="levelStr != null" >
    and (b.levelStr like #{levelStr,jdbcType=VARCHAR}"%" or b.id = #{managerId,jdbcType=INTEGER} )
    </if>
    <if test="pid != null" >
    and b.pid = #{pid,jdbcType=INTEGER}
    </if>
    <if test="gameId != null" >
    and a.gameId = #{gameId,jdbcType=INTEGER}
    </if>
    <if test="uuid != null" >
    and a.uuid = #{uuid,jdbcType=INTEGER}
    </if>
 	and a.status != 2 
  </select>
  
  <select id="selectByMidTimeMoney" resultType="java.lang.Integer"  parameterType="Map" >
    select IFNULL(sum(a.money),0) from paylog a,manager b where a.managerId = b.id and a.payType = 0 
	<if test="startTime != null" >
	 and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endTime != null" >
    and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
	<if test="levelStr != null" >
    and (b.levelStr like #{levelStr,jdbcType=VARCHAR}"%" or b.id = #{managerId,jdbcType=INTEGER} )
    </if>
    <if test="pid != null" >
    and b.pid = #{pid,jdbcType=INTEGER}
    </if>
    <if test="gameId != null" >
    and a.gameId = #{gameId,jdbcType=INTEGER}
    </if>
    <if test="uuid != null" >
    and a.uuid = #{uuid,jdbcType=INTEGER}
    </if>
 	and a.status != 2 
  	ORDER BY payTime desc
  </select>
  
  <select id="selectUserPaySum"  resultMap="BaseResultMap"  parameterType="Map" >
    select a.uuid,b.inviteCode as managerId,a.money,a.payCount,c.nickName  from (select uuid,managerId,sum(money) as money ,sum(payCount) as payCount 
    from paylog 
    where 1=1 
    <if test="managerId != null" >
    and managerId = #{managerId,jdbcType=INTEGER}
    </if>
    and payType = 0 and status !=2 
    <if test="startTime != null" >
 and payTime &gt; #{startTime,jdbcType=TIMESTAMP}
 </if>
 <if test="endTime != null" >
    and payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
    group by uuid,managerId ) a,manager b,account c where a.managerId = b.id and a.uuid = c.Uuid
    <if test="pid != null" >
    and b.pid = #{pid,jdbcType=INTEGER}
    </if>
    order by a.money desc limit #{startNum,jdbcType=INTEGER},#{pageNumber,jdbcType=INTEGER} 
    
  </select>
  
  
  <select id="selectSumByManagerId" resultType="java.lang.Integer" parameterType="Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    count(*)
    from paylog
    where 1 = 1
    <if test="managerId != null" >
    and managerId = #{managerId,jdbcType=INTEGER}
    </if>
    and payTime &gt; #{startTime,jdbcType=TIMESTAMP}
    and payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    and payType = #{payType,jdbcType=INTEGER}
    <if test="payType !=1" >
    and payTime &gt; (select IFNULL(MAX(payTime),from_unixtime(0)) from paylog where managerId = #{managerId,jdbcType=INTEGER} and (payType = 1 or payType = 2) and status = 1)
    </if>
  </select>
  
  <select id="remainByManagerId" resultType="java.lang.Double" parameterType="Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    money
    from paylog
    where payType = 9
    and managerId = #{managerId,jdbcType=INTEGER}
    and payTime = (select IFNULL(MAX(payTime),from_unixtime(0)) from paylog where managerId = #{managerId,jdbcType=INTEGER} and (payType = 9) and status = 1)
  </select>
  
  <select id="sumByManagerId" resultType="java.lang.Integer" parameterType="Map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    IFNULL(sum(money),0) 
    from paylog
    where 1 = 1
    <if test="managerId != null" >
    and managerId = #{managerId,jdbcType=INTEGER}
    </if>
    and payTime &gt; #{startTime,jdbcType=TIMESTAMP}
    and payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    and payType = 0 and status%10 = 0
    and (gameId = 1 or gameId = 3)
    <if test="isTixian != null" >
    and payTime &gt; (select IFNULL(MAX(payTime),from_unixtime(0)) from paylog where managerId = #{managerId,jdbcType=INTEGER} and (payType = 1 or payType = 2) and status = 1)
    </if>
    <if test="isTixian == null">
    	and payTime &gt; #{startTime,jdbcType=TIMESTAMP}
  		and payTime &lt; #{endTime,jdbcType=TIMESTAMP}
    </if>
  </select>
  
  <select id="sumSubByManagerId" resultType="java.lang.Double" parameterType="Map" >
    select IFNULL(sum(n.money*(#{rebate,jdbcType=DOUBLE}-(o.rebate+0.0))),0.0) from (
    	select sum(m.money) as money,m.top1mid from (
    		select sum(a.money) as money,b.id,
    		(case when (substring(b.levelStr,#{length,jdbcType=INTEGER},8)+0)=0 then b.id else (substring(b.levelStr,#{length,jdbcType=INTEGER},8)+0) end)
    		as top1mid from paylog a,manager b where a.managerId = b.id 
		    and (a.gameId = 1 or a.gameId = 3)
		    and a.payType = 0
		    <if test="isTixian != null" >
		    and a.payTime &gt; (select IFNULL(MAX(payTime),from_unixtime(0)) from paylog where managerId = #{managerId,jdbcType=INTEGER}  and payType = 1 and status = 1) 
		    </if>
		    <if test="isTixian == null">
		    and a.payTime &gt; #{startTime,jdbcType=TIMESTAMP}
    		and a.payTime &lt; #{endTime,jdbcType=TIMESTAMP}
		    </if>
    		and b.levelStr like concat(#{levelStr,jdbcType=VARCHAR},'%') group by id,top1mid 
    	) m group by m.top1mid
    ) n,manager o where n.top1mid = o.id
    </select>
      
    

  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from paylog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.weipai.model.Paylog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into paylog (id, managerId, uuid, 
      money, payCount, payTime, 
      payType, status)
    values (#{id,jdbcType=INTEGER}, #{managerid,jdbcType=INTEGER}, #{uuid,jdbcType=INTEGER}, 
      #{money,jdbcType=DOUBLE}, #{paycount,jdbcType=INTEGER}, #{paytime,jdbcType=TIMESTAMP}, 
      #{paytype,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.weipai.model.Paylog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">  
                SELECT LAST_INSERT_ID()  
    </selectKey>
    insert into paylog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="managerid != null">
        managerId,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="paycount != null">
        payCount,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="paytype != null">
        payType,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gameId != null">
        gameId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="managerid != null">
        #{managerid,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="paycount != null">
        #{paycount,jdbcType=INTEGER},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="gameId != null">
        #{gameId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="tixianDone"  parameterType="map">
  	update paylog
  	<if test="status != null">
        set status = #{status,jdbcType=INTEGER}
      </if>
      <if test="status == null">
        set status = 1
      </if>
    
     where id = #{id,jdbcType=INTEGER} and (payType = 1 or payType = 2) and status = 0
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update paylog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.managerid != null">
        managerId = #{record.managerid,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.paycount != null">
        payCount = #{record.paycount,jdbcType=INTEGER},
      </if>
      <if test="record.paytime != null">
        payTime = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paytype != null">
        payType = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update paylog
    set id = #{record.id,jdbcType=INTEGER},
      managerId = #{record.managerid,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      payCount = #{record.paycount,jdbcType=INTEGER},
      payTime = #{record.paytime,jdbcType=TIMESTAMP},
      payType = #{record.paytype,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.weipai.model.Paylog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update paylog
    <set>
      <if test="managerid != null">
        managerId = #{managerid,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="paycount != null">
        payCount = #{paycount,jdbcType=INTEGER},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="paytype != null">
        payType = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.weipai.model.Paylog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update paylog
    set managerId = #{managerid,jdbcType=INTEGER},
      uuid = #{uuid,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      payCount = #{paycount,jdbcType=INTEGER},
      payTime = #{paytime,jdbcType=TIMESTAMP},
      payType = #{paytype,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>